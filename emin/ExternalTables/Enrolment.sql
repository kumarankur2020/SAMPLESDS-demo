CREATE EXTERNAL TABLE [emin].[Enrolment] (
    [EnrolmentID] INT NULL,
    [Student] INT NULL,
    [Course] NVARCHAR (4000) NULL,
    [Campus] NVARCHAR (4000) NULL,
    [StartDate] DATETIME2 (7) NULL,
    [EndDate] DATETIME2 (7) NULL,
    [EnrolDate] DATETIME2 (7) NULL,
    [Duration] INT NULL,
    [StudyPeriod] INT NULL,
    [Agent] NVARCHAR (4000) NULL,
    [AgentCommission] NUMERIC (18, 2) NULL,
    [AgentCommType] NVARCHAR (4000) NULL,
    [AgentCommRate] NUMERIC (18, 2) NULL,
    [InvoiceAgent] INT NULL,
    [Started] INT NULL,
    [Finished] INT NULL,
    [enroloutcome] NVARCHAR (4000) NULL,
    [Comment] NVARCHAR (4000) NULL,
    [ResultIssued] INT NULL,
    [VisaType] NVARCHAR (4000) NULL,
    [VisaNo] NVARCHAR (4000) NULL,
    [VisaExDate] DATETIME2 (7) NULL,
    [HCProvider] NVARCHAR (4000) NULL,
    [HCFee] NVARCHAR (4000) NULL,
    [HCFeeAmount] NUMERIC (18, 2) NULL,
    [HCExDate] DATETIME2 (7) NULL,
    [fwLockUser] NVARCHAR (4000) NULL,
    [fwLockTime] DATETIME2 (7) NULL,
    [fwCreatedBy] NVARCHAR (4000) NULL,
    [fwCreated] DATETIME2 (7) NULL,
    [fwUpdatedBy] NVARCHAR (4000) NULL,
    [fwUpdated] DATETIME2 (7) NULL,
    [SessionGroup] NVARCHAR (4000) NULL,
    [StudyGroup] NVARCHAR (4000) NULL,
    [Currency] NVARCHAR (4000) NULL,
    [HCNo] NVARCHAR (4000) NULL,
    [HCFeeAmntProvider] NUMERIC (18, 2) NULL,
    [AgentGSTType] NVARCHAR (4000) NULL,
    [StartTriggered] INT NULL,
    [AVET_TrainLocationID] NVARCHAR (4000) NULL,
    [AVET_ConcessionType] NVARCHAR (4000) NULL,
    [AVET_Enrolment] INT NULL,
    [AVET_StudyReason] NVARCHAR (4000) NULL,
    [AVET_IntakeNumber] NVARCHAR (4000) NULL,
    [Term] NVARCHAR (4000) NULL,
    [PaymentSchedule] NVARCHAR (4000) NULL,
    [scholarship] NVARCHAR (4000) NULL,
    [AVET_AppClientID] NVARCHAR (4000) NULL,
    [AVET_AppContractID] NVARCHAR (4000) NULL,
    [AVET_ATTPBookingID] NVARCHAR (4000) NULL,
    [AVET_BookingID] NVARCHAR (4000) NULL,
    [AVET_ClaimStatus] NVARCHAR (4000) NULL,
    [AVET_TrainStatus] NVARCHAR (4000) NULL,
    [AVET_ExportID] INT NULL,
    [Notes] NVARCHAR (4000) NULL,
    [EnrolStatus] NVARCHAR (4000) NULL,
    [EnrolCategory] NVARCHAR (4000) NULL,
    [FinishTriggered] INT NULL,
    [SchoolYear] INT NULL,
    [NCEA_YearsSec] INT NULL,
    [NCEA_TertRelease] INT NULL,
    [NCEA_FinAssistType] NVARCHAR (4000) NULL,
    [NCEA_BenefitNum] NVARCHAR (4000) NULL,
    [NCEA_ExamCentre] INT NULL,
    [NCEA_Withdrawn] INT NULL,
    [NCEA_NumCand] INT NULL,
    [NCEA_ApplicationID] NVARCHAR (4000) NULL,
    [NCEA_BillingAmount] NUMERIC (18, 8) NULL,
    [NCEA_Enrolment] INT NULL,
    [NCEA_AssistApproval] INT NULL,
    [COSpecStatus] NVARCHAR (4000) NULL,
    [LeaversChecklistComplete] BIT NULL,
    [ZoneStatus] NVARCHAR (4000) NULL,
    [House] NVARCHAR (4000) NULL,
    [EnrolGroup] NVARCHAR (4000) NULL,
    [LockerAllocated] BIT NULL,
    [RollClass] NVARCHAR (4000) NULL,
    [ExitingStatus] NVARCHAR (4000) NULL,
    [ExitingReason] NVARCHAR (4000) NULL,
    [ExitingDestination] NVARCHAR (4000) NULL,
    [IntendedExitDate] DATETIME2 (7) NULL,
    [CalendarAcademicYearId] INT NULL,
    [CourseOfferingSpecificationId] INT NULL,
    [TimetableID] INT NULL,
    [Repeating] BIT NULL,
    [SpecialENeeds] BIT NULL,
    [DateAppReceived] DATETIME2 (7) NULL,
    [InformedBy] NVARCHAR (4000) NULL,
    [DateRecorded] DATETIME2 (7) NULL,
    [KnownSchool] NVARCHAR (4000) NULL,
    [NextSchool] NVARCHAR (4000) NULL,
    [Geography] NVARCHAR (4000) NULL,
    [Governance] NVARCHAR (4000) NULL,
    [SchoolType] NVARCHAR (4000) NULL,
    [NextYearLevel] NVARCHAR (4000) NULL,
    [DateCommencing] DATETIME2 (7) NULL,
    [NextSchoolNotes] NVARCHAR (4000) NULL,
    [ExitingSource] NVARCHAR (4000) NULL,
    [DateExitingRecorded] DATETIME2 (7) NULL,
    [LockerNumber] NVARCHAR (4000) NULL,
    [FTE] NUMERIC (18, 7) NULL,
    [Boarder] BIT NULL,
    [ApplicationId] INT NULL,
    [ChangeStart] DATETIME2 (7) NULL,
    [ChangeEnd] DATETIME2 (7) NULL
)
    WITH (
    DATA_SOURCE = [sds-raw-data_bceaaesdslake2_dfs_core_windows_net],
    LOCATION = N'eMinerva/Enrolment.parquet',
    FILE_FORMAT = [SynapseParquetFormat],
    REJECT_TYPE = VALUE,
    REJECT_VALUE = 0
    );
GO

